.DEFAULT_GOAL := help
SHELL := /bin/bash

FLUX_VERSION	:= 0.15.0
APP_ACC_VERSION := #VERSION
DOCKER_REGISTRY := registry.pivotal.io
TMP_YTT_DIR := #TEMP_YTT_DIR

DOCKER_EXISTS	:= @printf "docker"
DOCKER_WHICH	:= $(shell which docker)
ifeq ($(strip $(DOCKER_WHICH)),)
	DOCKER_EXISTS := @echo "ERROR: docker not found. See: https://docs.docker.com/get-docker/" && exit 1
endif

REGISTRY_USER_EXISTS := @printf "#REGISTRY_USER"
ifndef #REGISTRY_USER
	REGISTRY_USER_EXISTS := @echo "#REGISTRY_USER is undefined" && exit 1
endif

REGISTRY_PWD_EXISTS := @printf "#REGISTRY_PWD"
ifndef #REGISTRY_PWD
	REGISTRY_PWD_EXISTS := @echo "#REGISTRY_PWD is undefined" && exit 1
endif

KUBECTL_EXISTS	:= @printf "kubectl"
KUBECTL_WHICH	:= $(shell which kubectl)
ifeq ($(strip $(KUBECTL_WHICH)),)
	KUBECTL_EXISTS := @echo "ERROR: kubectl not found. See: https://kubernetes.io/docs/tasks/tools/" && exit 1
endif

KAPP_EXISTS	:= @printf "kapp"
KAPP_WHICH	:= $(shell which kapp)
ifeq ($(strip $(KAPP_WHICH)),)
	KAPP_EXISTS := @echo "ERROR: kapp not found. See: https://carvel.dev/#whole-suite" && exit 1
endif

IMGPKG_EXISTS	:= @printf "imgpkg"
IMGPKG_WHICH	:= $(shell which imgpkg)
ifeq ($(strip $(IMGPKG_WHICH)),)
	IMGPKG_EXISTS := @echo "ERROR: imgpkg not found. See: https://carvel.dev/#whole-suite" && exit 1
endif

KBLD_EXISTS	:= @printf "kbld"
KBLD_WHICH	:= $(shell which kbld)
ifeq ($(strip $(KBLD_EXISTS)),)
	KBLD_EXISTS := @echo "ERROR: kbld not found. See: https://carvel.dev/#whole-suite" && exit 1
endif

help:
	@clear
	@echo "Usage: make COMMAND"
	@echo
	@echo "Commands :"
	@echo
	@grep -E '[a-zA-Z\.\-]+:.*?@ .*$$' $(MAKEFILE_LIST)| tr -d '#' | awk 'BEGIN {FS = ":.*?@ "}; {printf "\033[32m%-9s\033[0m - %s\n", $$1, $$2}'

#check-env: @ Check environment variables and installed tools
check-env:

	@printf "Checking pre-requisites: "
	$(DOCKER_EXISTS)
	@printf " "
	$(REGISTRY_USER_EXISTS)
	@printf " "
	$(REGISTRY_PWD_EXISTS)
	@printf " "	
	$(KUBECTL_EXISTS)
	@printf " "	
	$(KAPP_EXISTS)
	@printf " "		
	$(IMGPKG_EXISTS)
	@printf " "	
	$(KBLD_EXISTS)
	@printf " "			
	@echo "- OK."	

#login: @ Login to a registry
login: check-env
	@docker login --username $$#REGISTRY_USER --password $$#REGISTRY_PWD  $$DOCKER_REGISTRY

#install: @ Install Application Accelerator for VMware Tanzu
install: check-env login
#deployFluxNoTKG	@kapp deploy -a flux -f https://github.com/fluxcd/flux2/releases/download/v$(FLUX_VERSION)/install.yaml --yes
#deployFluxTKG	@kapp deploy -a flux -f https://github.com/fluxcd/flux2/releases/download/v$(FLUX_VERSION)/install.yaml --filter '{"not": {"resource": {"kinds": ["NetworkPolicy"]}}}' --yes
#deleteFluxNetworkPolicies	@kubectl delete -n flux-system networkpolicies --all
#cleanupTempYTTDir	@rm -rf $(TMP_YTT_DIR)
	@imgpkg pull -b registry.pivotal.io/app-accelerator/acc-install-bundle:$(APP_ACC_VERSION) -o $(TMP_YTT_DIR)
	@tree $(TMP_YTT_DIR)
#0.1.0	@kubectl create namespace accelerator-system
#0.1.0	@kubectl create secret docker-registry acc-image-regcred -n accelerator-system --docker-server=$$DOCKER_REGISTRY --docker-username=${#REGISTRY_USER} --docker-password=${#REGISTRY_USER} 
#0.1.0	@export acc_server_service_type=#appAccServiceType
#0.1.0	@ytt -f $(TMP_YTT_DIR)/config -f $(TMP_YTT_DIR)/values.yml --data-values-env acc | kbld -f $(TMP_YTT_DIR)/.imgpkg/images.yml -f- | kapp deploy -y -n accelerator-system -a accelerator -f-
#0.2.0	@export acc_registry__server=$$DOCKER_REGISTRY
#0.2.0	@export acc_registry__username=${#REGISTRY_USER}
#0.2.0	@export acc_registry__password=${#REGISTRY_USER}
#0.2.0	@export acc_server__service_type=#appAccServiceType
#0.2.0	@export acc_server__watched_namespace=default
#0.2.0	@export acc_server__engine_invocation_url=http://acc-engine.accelerator-system.svc.cluster.local/invocations
#0.2.0	@export acc_engine__service_type=ClusterIP
#0.2.0	@ytt -f /tmp/acc-install-bundle/config -f /tmp/acc-install-bundle/values.yml --data-values-env acc | kbld -f /tmp/acc-install-bundle/.imgpkg/images.yml -f- kapp deploy -y -a accelerator -f-

#uninstall: @ UnInstall Application Accelerator for VMware Tanzu
uninstall: check-env
	@kapp delete -a flux --yes		
	@kapp delete -a accelerator -n accelerator-system --yes

get: 
	@kubectl get gitrepositories,accelerators
	@kubectl get -n accelerator-system pod,service

add: 
	@kubectl apply -f https://raw.githubusercontent.com/AndriyKalashnykov/tanzu-app-acc-install/main/tanzu-app-acc-install.yaml	

del: 
	@kubectl delete accelerator.accelerator.tanzu.vmware.com/tanzu-app-acc-install	